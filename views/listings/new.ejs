<% layout("/layouts/boilerplate") %>

<style>
    :root {
        --ocean-blue: #0077be;
        --sunset-orange: #ff6b35;
        --forest-green: #2d5016;
        --sky-blue: #87ceeb;
        --warm-sand: #f4e4bc;
        --coral-pink: #ff7f7f;
        --deep-teal: #008080;
    }

    body {
        /* Updated background to most light yellow color */
        background: #fffef7;
        min-height: 100vh;
        position: relative;
        overflow-x: hidden;
    }

    /* Floating background elements */
    body::before {
        content: '‚úàÔ∏è üèñÔ∏è üèîÔ∏è üè∞ üå¥ üó∫Ô∏è';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        font-size: 2rem;
        opacity: 0.1;
        animation: floatIcons 20s infinite linear;
        pointer-events: none;
        z-index: -1;
    }

    @keyframes floatIcons {
        0% { transform: translateY(100vh) rotate(0deg); }
        100% { transform: translateY(-100vh) rotate(360deg); }
    }

    /* Particle system */
    .particles {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
    }

    .particle {
        position: absolute;
        width: 4px;
        height: 4px;
        background: rgba(255, 255, 255, 0.6);
        border-radius: 50%;
        animation: particleFloat 15s infinite linear;
    }

    @keyframes particleFloat {
        0% {
            transform: translateY(100vh) translateX(0);
            opacity: 0;
        }
        10% { opacity: 1; }
        90% { opacity: 1; }
        100% {
            transform: translateY(-100vh) translateX(100px);
            opacity: 0;
        }
    }

    /* Main container */
    .form-container {
        /* Made form background darker with higher opacity and darker base color */
        background: rgba(0, 0, 0, 0.4);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 25px;
        padding: 3rem;
        margin-top: 2rem;
        /* Added bottom margin for spacing between form and footer */
        margin-bottom: 4rem;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        animation: slideInUp 1s ease-out;
        position: relative;
        overflow: hidden;
    }

    .form-container::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
        animation: shimmer 3s infinite;
        pointer-events: none;
    }

    @keyframes slideInUp {
        0% {
            transform: translateY(100px);
            opacity: 0;
        }
        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

    @keyframes shimmer {
        0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
        100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
    }

    /* Title styling */
    .form-title {
        text-align: center;
        color: white;
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 2rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        animation: titleGlow 2s ease-in-out infinite alternate;
        position: relative;
    }

    .form-title::after {
        content: 'üè°‚ú®';
        position: absolute;
        right: -60px;
        top: 50%;
        transform: translateY(-50%);
        animation: bounce 2s infinite;
    }

    @keyframes titleGlow {
        0% { text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3), 0 0 20px rgba(255, 255, 255, 0.3); }
        100% { text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3), 0 0 30px rgba(255, 255, 255, 0.6); }
    }

    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(-50%); }
        40% { transform: translateY(-60%); }
        60% { transform: translateY(-55%); }
    }

    /* Form group animations */
    .form-group {
        animation: fadeInLeft 0.8s ease-out;
        animation-fill-mode: both;
        margin-bottom: 2rem;
    }

    .form-group:nth-child(1) { animation-delay: 0.1s; }
    .form-group:nth-child(2) { animation-delay: 0.2s; }
    .form-group:nth-child(3) { animation-delay: 0.3s; }
    .form-group:nth-child(4) { animation-delay: 0.4s; }
    .form-group:nth-child(5) { animation-delay: 0.5s; }
    .form-group:nth-child(6) { animation-delay: 0.6s; }

    @keyframes fadeInLeft {
        0% {
            transform: translateX(-50px);
            opacity: 0;
        }
        100% {
            transform: translateX(0);
            opacity: 1;
        }
    }

    /* Enhanced form inputs */
    .form-label {
        color: white;
        font-weight: 600;
        margin-bottom: 0.8rem;
        display: block;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
    }

    .form-control {
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 15px;
        padding: 1rem 1.5rem;
        color: white;
        font-size: 1.1rem;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        backdrop-filter: blur(10px);
        position: relative;
    }

    .form-control::placeholder {
        color: rgba(255, 255, 255, 0.7);
        transition: all 0.3s ease;
    }

    .form-control:focus {
        outline: none;
        border-color: var(--sunset-orange);
        background: rgba(255, 255, 255, 0.2);
        box-shadow: 0 0 25px rgba(255, 107, 53, 0.4);
        transform: translateY(-2px);
    }

    .form-control:focus::placeholder {
        color: rgba(255, 255, 255, 0.9);
        transform: translateY(-20px);
    }

    /* File input styling */
    input[type="file"] {
        background: rgba(255, 255, 255, 0.1);
        border: 2px dashed rgba(255, 255, 255, 0.5);
        border-radius: 15px;
        padding: 2rem;
        text-align: center;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    input[type="file"]:hover {
        border-color: var(--sunset-orange);
        background: rgba(255, 255, 255, 0.2);
        transform: scale(1.02);
    }

    input[type="file"]::before {
        content: 'üì∏ Drop your amazing photo here or click to browse';
        display: block;
        color: white;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    /* Row animations */
    .row {
        animation: slideInRight 0.8s ease-out 0.4s both;
    }

    @keyframes slideInRight {
        0% {
            transform: translateX(50px);
            opacity: 0;
        }
        100% {
            transform: translateX(0);
            opacity: 1;
        }
    }

    /* Enhanced button */
    .add-btn {
        background: linear-gradient(135deg, var(--sunset-orange), var(--coral-pink));
        border: none;
        border-radius: 25px;
        padding: 1rem 3rem;
        font-size: 1.2rem;
        font-weight: 700;
        color: white;
        text-transform: uppercase;
        letter-spacing: 1px;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(255, 107, 53, 0.4);
        animation: buttonPulse 2s infinite;
        display: block;
        margin: 2rem auto 0;
        min-width: 200px;
    }

    .add-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
        transition: left 0.5s;
    }

    .add-btn:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 15px 40px rgba(255, 107, 53, 0.6);
        background: linear-gradient(135deg, var(--coral-pink), var(--sunset-orange));
    }

    .add-btn:hover::before {
        left: 100%;
    }

    .add-btn:active {
        transform: translateY(-1px) scale(1.02);
    }

    @keyframes buttonPulse {
        0%, 100% { box-shadow: 0 10px 30px rgba(255, 107, 53, 0.4); }
        50% { box-shadow: 0 10px 30px rgba(255, 107, 53, 0.6), 0 0 20px rgba(255, 107, 53, 0.3); }
    }

    /* Validation feedback */
    .valid-feedback, .invalid-feedback {
        color: white;
        font-weight: 600;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
        animation: feedbackSlide 0.3s ease-out;
    }

    @keyframes feedbackSlide {
        0% {
            transform: translateY(-10px);
            opacity: 0;
        }
        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

    /* Responsive design */
    @media (max-width: 768px) {
        .form-container {
            margin: 1rem;
            padding: 2rem 1.5rem;
        }
        
        .form-title {
            font-size: 2rem;
        }
        
        .form-title::after {
            right: -40px;
            font-size: 1.5rem;
        }
    }

    /* Loading state for form submission */
    .form-container.loading .add-btn {
        background: linear-gradient(135deg, #ccc, #999);
        cursor: not-allowed;
        animation: loadingPulse 1s infinite;
    }

    @keyframes loadingPulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.7; }
    }
</style>

<body>
    <!-- Particle system -->
    <div class="particles">
        <div class="particle" style="left: 10%; animation-delay: 0s;"></div>
        <div class="particle" style="left: 20%; animation-delay: 2s;"></div>
        <div class="particle" style="left: 30%; animation-delay: 4s;"></div>
        <div class="particle" style="left: 40%; animation-delay: 6s;"></div>
        <div class="particle" style="left: 50%; animation-delay: 8s;"></div>
        <div class="particle" style="left: 60%; animation-delay: 10s;"></div>
        <div class="particle" style="left: 70%; animation-delay: 12s;"></div>
        <div class="particle" style="left: 80%; animation-delay: 14s;"></div>
        <div class="particle" style="left: 90%; animation-delay: 16s;"></div>
    </div>

    <div class="row mt-3">
        <div class="col-10 offset-1 col-lg-8 offset-lg-2">
            <div class="form-container">
                <h3 class="form-title">Create Your Dream Listing</h3>
                
                <form action="/listings" method="post" novalidate class="needs-validation" 
                enctype="multipart/form-data">

                    <div class="form-group mb-3">
                        <label for="title" class="form-label">‚ú® Enter Title</label>
                        <input  
                         name="listing[title]" 
                         placeholder="Add a catchy title that captures hearts" 
                         type="text" 
                         class="form-control"
                         required/>
                         <div class="valid-feedback">Perfect title! ‚úÖ</div>
                    </div>
                    
                    <div class="form-group mb-3">
                         <label for="description" class="form-label">üìù Description</label>
                         <textarea 
                         name="listing[description]" 
                         type="text"
                         class="form-control"
                         placeholder="Describe your amazing place in detail..."
                         rows="4"
                         required></textarea>
                         <div class="invalid-feedback">Please share what makes this place special</div>
                    </div>
                   
                    <div class="form-group mb-3">
                        <label for="image" class="form-label">üñºÔ∏è Upload Listing Image</label>
                        <input name="image" 
                        class="form-control" 
                         type="file"
                         accept="image/*">
                    </div>

                    <div class="row">
                        <div class="form-group mb-3 col-md-4">
                            <label for="price" class="form-label">üí∞ Price</label>
                             <input name="listing[price]" 
                             placeholder="‚Çπ1200" 
                             class="form-control" 
                             type="number"
                             required>
                             <div class="invalid-feedback">Please enter a valid price</div>
                        </div>
                       
                        <div class="form-group mb-3 col-md-8">
                             <label for="country" class="form-label">üåç Country</label>
                              <input name="listing[country]" 
                              placeholder="India" 
                              class="form-control" 
                              type="text" 
                              required>
                               <div class="invalid-feedback">Country name should be valid</div>
                        </div>
                    </div>  
                    
                    <div class="form-group mb-3">
                         <label for="location" class="form-label">üìç Location</label>
                         <input name="listing[location]" 
                         placeholder="Enter the exact location" 
                         type="text" 
                         class="form-control" 
                         required>
                          <div class="invalid-feedback">Location should be valid</div>
                    </div>
                    
                    <button class="btn add-btn mt-3" type="submit">
                        üöÄ Create Listing
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Add loading state on form submission
        document.querySelector('form').addEventListener('submit', function() {
            document.querySelector('.form-container').classList.add('loading');
        });

        // Enhanced form interactions
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.querySelector('.form-label').style.transform = 'scale(1.05)';
                this.parentElement.querySelector('.form-label').style.color = '#ff6b35';
            });
            
            input.addEventListener('blur', function() {
                this.parentElement.querySelector('.form-label').style.transform = 'scale(1)';
                this.parentElement.querySelector('.form-label').style.color = 'white';
            });
        });
    </script>
</body>
